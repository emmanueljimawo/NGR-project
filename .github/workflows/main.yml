name: Continuous Integration and Delivery

on: [push]

env:
  NGR_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/ngr_website:v1.0.391
  NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx:v1.0.54

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo SQL_ENGINE=${{ secrets.SQL_ENGINE }} >> .env
          echo DATABASE=${{ secrets.DATABASE }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo RECAPTCHA_PUBLIC_KEY=${{ secrets.RECAPTCHA_PUBLIC_KEY }} >> .env
          echo RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }} >> .env
          echo PAYSTACK_PUBLIC_KEY=${{ secrets.PAYSTACK_PUBLIC_KEY }} >> .env
          echo PAYSTACK_SECRET_KEY=${{ secrets.PAYSTACK_SECRET_KEY }} >> .env
          echo VIRTUAL_HOST=${{ secrets.VIRTUAL_HOST }} >> .env
          echo VIRTUAL_PORT=${{ secrets.VIRTUAL_PORT }} >> .env
          echo LETSENCRYPT_HOST=${{ secrets.LETSENCRYPT_HOST }} >> .env
          echo DEFAULT_EMAIL=${{ secrets.DEFAULT_EMAIL }} >> .env
          echo NGINX_PROXY_CONTAINER=${{ secrets.NGINX_PROXY_CONTAINER }} >> .env
          echo LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }} >> .env
          echo REDIRECT_STATUS_CODE=${{ secrets.REDIRECT_STATUS_CODE }} >> .env
          echo REDIRECT_LOCATION=${{ secrets.REDIRECT_LOCATION }} >> .env
          echo EMAIL_BACKEND=${{ secrets.EMAIL_BACKEND }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }} >> .env
          echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo FROM_EMAIL=${{ secrets.FROM_EMAIL }} >> .env

      - name: Set environment variables
        run: |
          echo "NGR_IMAGE=$(echo ${{env.NGR_IMAGE}} )" >> $GITHUB_ENV
          echo "NGINX_IMAGE=$(echo ${{env.NGINX_IMAGE}} )" >> $GITHUB_ENV
      - name: Log in to GitHub Packages
        run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.NGR_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.NGR_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
          echo SQL_ENGINE=${{ secrets.SQL_ENGINE }} >> .env
          echo DATABASE=${{ secrets.DATABASE }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo RECAPTCHA_PUBLIC_KEY=${{ secrets.RECAPTCHA_PUBLIC_KEY }} >> .env
          echo RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }} >> .env
          echo PAYSTACK_PUBLIC_KEY=${{ secrets.PAYSTACK_PUBLIC_KEY }} >> .env
          echo PAYSTACK_SECRET_KEY=${{ secrets.PAYSTACK_SECRET_KEY }} >> .env
          echo VIRTUAL_HOST=${{ secrets.VIRTUAL_HOST }} >> .env
          echo VIRTUAL_PORT=${{ secrets.VIRTUAL_PORT }} >> .env
          echo LETSENCRYPT_HOST=${{ secrets.LETSENCRYPT_HOST }} >> .env
          echo DEFAULT_EMAIL=${{ secrets.DEFAULT_EMAIL }} >> .env
          echo NGINX_PROXY_CONTAINER=${{ secrets.NGINX_PROXY_CONTAINER }} >> .env
          echo LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }} >> .env
          echo REDIRECT_STATUS_CODE=${{ secrets.REDIRECT_STATUS_CODE }} >> .env
          echo REDIRECT_LOCATION=${{ secrets.REDIRECT_LOCATION }} >> .env
          echo EMAIL_BACKEND=${{ secrets.EMAIL_BACKEND }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }} >> .env
          echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo FROM_EMAIL=${{ secrets.FROM_EMAIL }} >> .env
          echo NGR_IMAGE=${{ env.NGR_IMAGE }} >> .env
          echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/home
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /home
            source .env
            docker login ghcr.io -u ${{ secrets.NAMESPACE }} -p ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            docker pull $NGR_IMAGE
            docker pull $NGINX_IMAGE 
            docker-compose -f docker-compose.prod.yml up -d
          ENDSSH